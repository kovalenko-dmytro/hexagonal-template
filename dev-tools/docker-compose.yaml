version: '3'
name: hexagonal-template-backend
services:
  database:
    container_name: database
    image: postgres:16-alpine
    hostname: ${DB_HOST}
    ports:
      - "${DB_EXTERNAL_PORT}:${DB_INTERNAL_PORT}"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME}'" ]
      timeout: 45s
      interval: 10s
      retries: 2
    restart: always
    volumes:
      - "./db-init:/docker-entrypoint-initdb.d"
      - "postgres_data:/data/postgres"
      - "postgres_backup:/data/postgres/backup"
    env_file: .env

  message-broker:
    container_name: message-broker
    image: rabbitmq:3-management
    hostname: ${MESSAGE_BROKER_HOST}
    ports:
      - "${MESSAGE_BROKER_EXTERNAL_PORT}:${MESSAGE_BROKER_INTERNAL_PORT}"
      - "${MESSAGE_BROKER_UI_EXTERNAL_PORT}:${MESSAGE_BROKER_UI_INTERNAL_PORT}"
    environment:
      RABBITMQ_DEFAULT_USER: ${MESSAGE_BROKER_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${MESSAGE_BROKER_PASSWORD}
    healthcheck:
      test: [ "CMD", "nc", "-z", "${MESSAGE_BROKER_HOST}", "${MESSAGE_BROKER_EXTERNAL_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    env_file: .env

  cache-storage:
    container_name: cache-storage
    image: redis:7.0.5-alpine
    hostname: ${REDIS_HOST}
    ports:
      - "${REDIS_EXTERNAL_PORT}:${REDIS_INTERNAL_PORT}"
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    env_file: .env

  file-storage:
    container_name: file-storage
    image: localstack/localstack
    ports:
      - "${AWS_S3_EXTERNAL_PORT}:${AWS_S3_INTERNAL_PORT}"
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./bucket-init:/etc/localstack/init/ready.d
      - '/var/run/docker.sock:/var/run/docker.sock'
    env_file: .env

volumes:
  postgres_data:
  postgres_backup:

networks:
  default:
    driver: bridge