spring:
  config:
    import: optional:file:dev-tools/.env[.properties]
  profiles:
    active: ${APPLICATION_PROFILE}
  cache:
    type: redis
    redis:
      cache-null-values: false
      time-to-live: 60000
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_EXTERNAL_PORT}
      password: ${REDIS_PASSWORD}
    web:
      pageable:
        one-indexed-parameters: true
  liquibase:
    change-log: classpath:db/db.changelog.xml
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_EXTERNAL_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  rabbitmq:
    host: ${MESSAGE_BROKER_HOST}
    port: ${MESSAGE_BROKER_EXTERNAL_PORT}
    username: ${MESSAGE_BROKER_USERNAME}
    password: ${MESSAGE_BROKER_PASSWORD}
  mail:
    protocol: smtp
    host: smtp.gmail.com
    port: 465
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    tls: true
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            required: true
            enable: true
          ssl:
            enable: true
            trust: smtp.gmail.com
  thymeleaf:
    check-template-location: false

springdoc:
  api-docs:
    path: /api-docs

logbook:
  format:
    style: json
  strategy: default
  filter:
    enabled: true
    exclude:
      - /health
      - /metrics
  obfuscate:
    headers:
      - Authorization
      - Cookie
    parameters:
      - password
      - accessToken
    json-body-fields:
      - password
      - accessToken
    replacement: XXXXXX
  write:
    level: TRACE
  max-body-size: 100000
  exclude:
    content-types:
      - application/octet-stream
  request:
    conditions:
      methods: [GET, POST, PUT, PATCH, DELETE]

logging:
  level:
    org:
      zalando:
        logbook:
          Logbook: TRACE

application:
  default-admin:
    username: ${DEFAULT_ADMIN_USERNAME}
    password: ${DEFAULT_ADMIN_PASSWORD}
    email: ${DEFAULT_ADMIN_EMAIL}
  jwt:
    secret-key: ${JWT_SECRET_KEY}
    expiration: ${JWT_EXPIRED}
    refresh-expiration: ${JWT_REFRESH_EXPIRED}

server:
  servlet:
    context-path: /${SERVER_CONTEXT_PATH}
  port: ${SERVER_PORT}